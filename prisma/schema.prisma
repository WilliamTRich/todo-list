generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int        @id @default(autoincrement()) @map("_id")
  email          String     @unique
  emailVerified  DateTime?
  username       String?
  hashedPassword String?
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  sessions       Session[]
  schedules      Schedule[]
  tasks          Task[]
}

model Task {
  id         Int       @id @default(autoincrement()) @map("_id")
  title      String
  notes      String?
  dueDate    DateTime?
  startTime  DateTime?
  endTime    DateTime?
  completed  Boolean   @default(false)
  userId     Int
  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  scheduleId Int?
  schedule   Schedule? @relation(fields: [scheduleId], references: [id], onDelete: SetNull)
}

model Schedule {
  id        Int      @id @default(autoincrement()) @map("_id")
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  tasks     Task[]
}

model Session {
  id           Int      @id @default(autoincrement()) @map("_id")
  sessionToken String   @unique
  userId       Int
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  id        Int      @id @default(autoincrement()) @map("_id")
  identifer String
  token     String   @unique
  expires   DateTime

  @@unique([identifer, token])
}
